---
title: "Corpus cleaning"
format: md
editor: visual
---

```{r}
library(tidyverse)
library(tidytext)
```

## Authors - doubles

```{r}
corpus <- readRDS("../../data/corpus1835/corpus_1835_metrics.Rds")
glimpse(corpus)
```

### Detect doubles with RNC

Same code as in 04_1

```{r}
load("../../data/nkrja_19th_lem.Rda")

corpus1835_check <- corpus %>% 
    rename(author = author_text) %>% 
    filter(n_lines > 3) %>%
  # create a check variable from the first three lemmatized lines
    mutate(doublesCheck = str_extract(text_lemm, "^.*?\n.*?\n.*?\n")) %>% 
    mutate(doublesCheck = str_remove_all(doublesCheck, "[[:punct:]]|[[:space:]]")) %>% 
    select(text_id, author, A_ID, year, doublesCheck, text_raw)

nkrja19_check <- c19 %>% 
    filter(diff < 10) %>% 
    filter(year > 1774 & year < 1851) %>% 
    filter(verses > 1) %>% 
    rename(n_lines = verses,
           text_lemm = lemma) %>% 
    filter(n_lines > 3) %>%
    mutate(doublesCheck = str_extract(text_lemm, "^.*?\n.*?\n.*?\n")) %>% 
    mutate(doublesCheck = str_remove_all(doublesCheck, "[[:punct:]]|[[:space:]]")) %>% 
    select(Unnamed..0, author, year, doublesCheck, text_raw)

doubles <- nkrja19_check %>% 
  filter(doublesCheck != "") %>% # remove cases then the first lines were empty or sth like this
  inner_join(corpus1835_check, by = "doublesCheck")  

glimpse(doubles)  

# write.csv(doubles, file = "doubles.csv")
```

See author to author correspondence (authors should find the equivalents with themselves!)

```{r}
print(paste0("Number of intersections between RNC & corpus_1835: ", nrow(doubles)))

doubles %>% 
  count(author.x, author.y, A_ID, sort = T)

doubles %>% 
  select(text_id) %>% 
  mutate(text_id = str_remove_all(text_id, "M_")) %>% 
  separate(text_id, into = c("corpus", "id"), sep = "_") %>% 
  count(corpus)
```

```{r}
test <- doubles %>% 
  select(-A_ID) %>% 
  left_join(corpus %>% select(text_id, A_ID, author_text),
            by = "text_id") %>% 
  select(author.x, author.y, A_ID, author_text) %>% 
  distinct()

test
```

```{r}
doubles %>% 
  count(author.x, author.y, A_ID, sort = T) %>% 
  mutate(author_rnc = str_replace(author.x, 
                                      "^(\\w\\.) (\\w\\.) (\\w+)$",
                                      "\\3 \\1\\2")) %>% 
  select(-author.x) %>% 
  filter(author_rnc != author.y | A_ID == "")
```

```{r}
glimpse(doubles)
```

Authors with signatures: add A_ID & add to the texts meta

```{r}
doubles %>% 
  filter(A_ID == "" & author.y != "") %>% 
  select(author.x, author.y, A_ID) %>% distinct()

t <- doubles %>% 
  filter(A_ID == "" & author.y != "") %>% 
  select(author.x, author.y, A_ID) %>% 
  distinct()

a_id_vec <- c("A-307", "A-309", "A-308", "A-310", "A-310", "A-110", "A-142",
              "A-308", "A-311")

t$A_ID_new <- a_id_vec
t

doubles %>% 
  left_join(t %>% select(-author.x, -A_ID),
            by = "author.y") %>% 
  mutate(A_ID = ifelse(A_ID == "" & !is.na(A_ID_new), A_ID_new, A_ID)) %>% 
  # fast check if A_ID were placed correctly
  filter(author.y != "" & author.x != "") %>% select(author.x, author.y, A_ID) %>% distinct # seems to work

doubles_cln <- doubles %>% 
  left_join(t %>% select(-author.x, -A_ID),
            by = "author.y") %>% 
  mutate(A_ID = ifelse(A_ID == "" & !is.na(A_ID_new), A_ID_new, A_ID)) %>% 
  select(-A_ID_new)
```

Fill empty A_ID for known authors

```{r}
t_empty <- doubles %>% 
  select(author.x, author.y, A_ID, text_id) %>% 
  filter(author.x != "" & author.y == "") %>% 
  distinct()

t_empty

a_id_empty <- c("", "A-162", "A-61", "A-143", "A-151", 
                "A-113", "A-115", "A-11", "A-11", "A-245")

t_empty$A_ID_new <- a_id_empty

t_empty

doubles %>% 
  left_join(t_empty %>% select(text_id, A_ID_new), 
            by = "text_id") %>% 
  mutate(A_ID = ifelse(!is.na(A_ID_new), A_ID_new, A_ID)) %>% 
  filter(author.y == "") %>% 
  select(author.x, author.y, A_ID) %>% 
  distinct()

doubles_cln <- doubles_cln %>% 
  left_join(t_empty %>% select(text_id, A_ID_new), 
            by = "text_id") %>% 
  mutate(A_ID = ifelse(!is.na(A_ID_new), A_ID_new, A_ID))
```

Check that all authors here now have A_ID

```{r}
doubles_cln %>% 
  count(author.x, author.y, A_ID, sort = T) %>% 
  mutate(author_rnc = str_replace(author.x, 
                                      "^(\\w\\.) (\\w\\.) (\\w+)$",
                                      "\\3 \\1\\2")) %>% 
  select(-author.x) %>% 
  filter(author_rnc != author.y | A_ID == "")
```

Attach checked A_ID to the corpus

```{r}
# create a table with A_IDs from doubles with RNC
a_id_doubles <- doubles_cln %>% 
  select(text_id, A_ID) %>% # only text and author ID
  rename(A_ID_checked = A_ID)

# join the new A_IDs with existing corpus
corpus_cln <- corpus %>% 
  left_join(a_id_doubles, by = "text_id") %>% 
  # insert new A_ID from the column if it is specified
  mutate(A_ID = ifelse(!is.na(A_ID_checked) & A_ID_checked != "", 
                       A_ID_checked, A_ID)) %>% 
  select(-A_ID_checked) # remove additional column

glimpse(corpus_cln)
```

### author_text & author_sign cleaning

Check authors & A_ID in the corpus in general

```{r}
corpus_cln %>% 
  select(author_sign, author_text, A_ID) %>% 
  count(author_sign, author_text, A_ID, sort = T)

# 213 anonimous texts (with no author sign at all)
```

```{r}
corpus_cln %>% 
  filter(str_detect(author_text, "Мещерский"))
```

```{r}
corpus_cln2 <- corpus_cln %>% 
  mutate(A_ID = ifelse(author_sign == "Аладьина Е.В.", "A-60", A_ID),
         A_ID = ifelse(author_text == "Раич", "A_310", A_ID),
         A_ID = ifelse(author_text == "С. Раич", "A_310", A_ID),
         A_ID = ifelse(author_text == "Александр Чужбинский", "A-191", A_ID),
         A_ID = ifelse(author_sign == "Любич", "A-200", A_ID),
         A_ID = ifelse(author_text == "В. Григорьев", "A-309", A_ID),
         A_ID = ifelse(author_text == "*…..А*…..А", "A-60", A_ID), 
         A_ID = ifelse(author_text == "[Киселева?]", "A-225", A_ID),
         A_ID = ifelse(author_text == "И. Оссовецкий, Вил. Двор. Инст.", "A-313", A_ID),
         A_ID = ifelse(author_text == "Н. Петровский", "A-314", A_ID),
         A_ID = ifelse(author_text == "С. Лакроа", "A-315", A_ID),
         A_ID = ifelse(author_text == "С. Локроа", "A-315", A_ID),
         A_ID = ifelse(author_text == "Л. Плошинский, Вил. Двор. Инст.", "A-316", A_ID)
         
         ) %>% 
  
  #	add Князь Э. Мещерский
  mutate(A_ID = ifelse(str_detect(author_text, "Мещерский"), "A-312", A_ID)) %>% 
  
  # clean some Unknown old tags
  mutate(author_text = ifelse(author_text == "Unknown", "", author_text),
         author_sign = ifelse(author_sign == "Unknown", "", author_sign),
         
         # clean almanack author signs
         # if almanack's editor is placed instead of the author of the text, change it to the text's author in the sign column
         author_sign = ifelse(author_sign == "Владиславлев", author_text, author_sign),
        author_sign = ifelse(author_sign == "Владиславлев В.А.", author_text, author_sign),
        author_sign = ifelse(author_sign == "Кукольник Н. (изд.)", author_text, author_sign),
        author_sign = ifelse(author_sign == "Максимович М.", author_text, author_sign), 
        author_sign = ifelse(author_sign == "Бобылев Н.И.", author_text, author_sign),
        author_sign = ifelse(author_sign == "Лебедев В. (изд.)", author_text, author_sign),
        author_sign = ifelse(author_sign == "Крыловский В.", author_text, author_sign),
        author_sign = ifelse(author_sign == "Кульчицкий А.", author_text, author_sign),
        author_sign = ifelse(author_sign == "Владиславлев", author_text, author_sign)
  )
```

Check

```{r}
corpus_cln2 %>% 
  select(author_sign, author_text, A_ID) %>% 
  count(author_sign, author_text, A_ID, sort = T)
```

### attach authors metadata

Read authors metadata for clean names

```{r}
authors_meta <- read.delim("../../meta/authors.tsv", sep = "\t") %>% 
  mutate(A_ID = str_replace_all(A_ID, "-", "_"))

glimpse(authors_meta)
```

```{r}
corpus_cln2 %>% 
  filter(A_ID == "А-48") %>% select(A_ID, author_sign) %>% distinct  # typo with cyrrilic A 
```

```{r}
corpus_authors <- corpus_cln2 %>% 
  # clean error with - and _ in A_ID
  mutate(A_ID = ifelse(A_ID == "А-48", "A_48", A_ID), # fix typo
         A_ID = str_replace_all(A_ID, "-", "_") # fix - _ variants
         ) %>% 
  
  # attach names from the authors_meta
  left_join(authors_meta %>% select(A_ID, author),
            by = "A_ID") %>% 
  
  rename(author_text_old = author_text,  # rename the old column with errors
         author_text = author) %>% # assign new name from the joined column
  
  # for authors with no A_ID but with some sign, assign author_text as author_sign
  mutate(author_text = ifelse(A_ID == "" & is.na(author_text), 
                              author_sign,
                              author_text)) %>% 
  select(-author_text_old)
  
  #select(author_sign, author_text_old, author_text, A_ID) %>% distinct() # check

```

Some cleaning

```{r}
# fill NA with empty space
corpus_authors[is.na(corpus_authors)] <- ""

# reorder columns
corpus_authors <- corpus_authors %>% 
  select(text_id, A_ID, author_sign, author_text, everything()) %>% 
  
  # bring back - in A_ID for consistency with original table
  mutate(A_ID = str_replace(A_ID, "_", "-"))
```

Check authors

```{r}
corpus_authors %>% 
  count(author_text, A_ID, sort = T)
```

```{r}
unique(corpus_authors$A_ID)
```

Save

```{r}
saveRDS(corpus_authors, "../../data/corpus1835/corpus_1835.Rds")
```
