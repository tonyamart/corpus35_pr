---
title: "03_corpus_overview"
format: md
editor: visual
---

# Corpus overview

## load pckg

```{r, warning=FALSE, message=FALSE}
library(tidyverse)
library(tidytext)

library(MetBrewer)
library(cowplot)
theme_set(theme_minimal())

```

## load data

```{r}
corpus_1835 <- readRDS("../../data/corpus1835/corpus_1835.Rds")
glimpse(corpus_1835)
```

Read full metadata with books & periodicals titles to count sources

```{r}
sources <- read.csv("../../data/corpus1835/sql_db/sources.csv")
text_ids <- read.csv("../../data/corpus1835/sql_db/texts_metadata.csv")

# glimpse(sources)
# glimpse(text_ids)

# extract sources and metrical data
sources <- text_ids %>% 
  select(text_id, source_id, meter, feet) %>% 
  left_join(sources, by = "source_id")

rm(text_ids)
```

Helpers

```{r}
meters_transl <- tibble(
  meter = c("Other", "Iamb", "Trochee", "Amphibrach", "Anapest", "Dactyl"),
  meter_rus = c("Другой", "Ямб", "Хорей", "Амфибрахий", "Анапест", "Дактиль"),
  meter_short = c("Др", "Я", "Х", "Амф", "Ан", "Д")
)

unique(corpus_1835$meter)
```

# Overview

Corpus overview in terms of poems' length and sizes of subcorpora

## corpus total size

```{r}
print(paste0("Number of poems: ", nrow(corpus_1835)))

print(paste0("Number of poems in periodicals: ", table(corpus_1835$corpus)[2]))
print(paste0( "Number of poems in collections: ", table(corpus_1835$corpus)[1]))

print("Number of lines:")
corpus_1835 %>% 
  select(corpus, text_raw) %>% 
  separate_rows(text_raw, sep = "\n") %>% 
  filter(text_raw != "") %>% nrow()

corpus_1835 %>% 
  select(corpus, text_raw) %>% 
  separate_rows(text_raw, sep = "\n") %>% 
  filter(text_raw != "") %>% 
  count(corpus)


print("Number of tokens:")
corpus_1835 %>% 
  select(corpus, text_lemm) %>% 
  unnest_tokens(input = text_lemm, output = word, token = "words") %>% 
  nrow()

corpus_1835 %>% 
  select(corpus, text_lemm) %>% 
  unnest_tokens(input = text_lemm, output = word, token = "words") %>% 
  count(corpus) 

  
print("Number of lemmas:")
corpus_1835 %>% 
  select(corpus, text_lemm) %>% 
  unnest_tokens(input = text_lemm, output = word, token = "words") %>% 
  count(word) %>% nrow

corpus_1835 %>% 
  select(corpus, text_lemm) %>% 
  unnest_tokens(input = text_lemm, output = word, token = "words") %>% 
  count(corpus, word) %>%
  select(-n) %>%
  ungroup() %>%
  count(corpus)
```

Number of poems per year

```{r}
corpus_1835 %>% 
  count(year, corpus) %>% 
  ggplot(aes(x = year, y = n, fill = corpus)) + 
  geom_col(position = "dodge") + 
  scale_fill_manual(values = c(met.brewer("Veronese")[3],
                               met.brewer("Veronese")[6]))

corpus_1835 %>% 
  count(year, corpus) %>% 
  ggplot(aes(x = year, y = n, fill = corpus)) + 
  geom_col(position = "stack") + 
  scale_fill_manual(values = c(met.brewer("Veronese")[3],
                               met.brewer("Veronese")[6]))

```

Number of tokens per year

```{r}
tokens <- corpus_1835 %>% 
  select(corpus, year, text_lemm) %>% 
  unnest_tokens(input = text_lemm, output = word, token = "words") %>% 
  count(corpus, year) 
  
tokens %>%  
  ggplot(aes(x = year, y = n, fill = corpus)) + geom_col(position = "dodge") + 
  scale_fill_manual(values = c(met.brewer("Veronese")[3],
                               met.brewer("Veronese")[6]))

tokens %>% 
  ggplot(aes(x = year, y = n, fill = corpus)) + geom_col(position = "stack") + 
  scale_fill_manual(values = c(met.brewer("Veronese")[3],
                               met.brewer("Veronese")[6]))

sum(tokens$n)
```

## authors' subcorpora

Poems

```{r}
corpus_1835 %>%
  filter(author_text != "") %>% 
  count(author_text, corpus, sort = T) %>% head(20)

corpus_1835 %>%
  filter(author_text != "") %>% 
  count(author_text, corpus, sort = T) %>% 
  ggplot(aes(x = reorder_within(author_text, -n, -n), y = n, fill = corpus)) + geom_col() + 
  theme(axis.text.x = element_blank()) + 
  scale_fill_manual(values = c(met.brewer("Veronese")[3],
                               met.brewer("Veronese")[6]))
```

Number of tokens by authors

```{r}
corpus_1835 %>%
  #filter(author_text != "") %>% 
  select(author_text, corpus, text_lemm) %>% 
  unnest_tokens(input = text_lemm, output = word, token = "words") %>%
  count(author_text, sort = T) %>% head(30)

corpus_1835 %>%
  # filter(author != "") %>% 
  select(author_text, corpus, text_lemm) %>% 
  unnest_tokens(input = text_lemm, output = word, token = "words") %>%
  count(author_text, corpus, sort = T) %>% 
  ggplot(aes(x = reorder_within(author_text, -n, -n), y = n, fill = corpus)) + 
  geom_col() + 
  geom_hline(yintercept = 2000, color = "blue") + 
  theme(axis.text.x = element_blank()) + 
  scale_fill_manual(values = c(met.brewer("Veronese")[3],
                               met.brewer("Veronese")[6]))
```

# Subtitles & genres

Simple word counter for genres and keywords in titles

```{r}
corpus_1835 %>% 
  mutate(title_words = paste(text_title, text_subtitle)) %>% 
  filter(text_title != "NA" & text_subtitle != "na") %>% 
  select(text_id, text_title, title_words) %>% 
  unnest_tokens(input = title_words, output = word, token = "words") %>%
  #filter(word == "е") #%>% 
  count(word, sort = T) %>% 
  head()

# things like separate letters ("e") came from titles with abbreviated names ("To E.E.")


```

```{r}
titles <- corpus_1835 %>% 
  mutate(title_words = paste(text_title, text_subtitle)) %>% 
  filter(text_title != "NA" & text_subtitle != "na") %>% 
  select(text_id, text_title, title_words) %>% 
  unnest_tokens(input = title_words, output = word, token = "words") #%>%
  #filter(word == "е") #%>% 
  #count(word, sort = T) 

# write.csv(titles, "poems_titles.csv") # write to lemmatise
```

Load titles

```{r}
titles <- read.csv("poems_titles.csv") %>% select(-X)

head(titles)
```

Count lemmas in titles

```{r}
titles_counter <- titles %>% 
  count(lemma, sort = T)

head(titles_counter, 215)
```

Count N of periodicals and books texts

```{r}
# total number of texts in periodicals and in collections
n_corpus <- corpus_1835 %>% 
  mutate(corpus = str_extract(text_id, "^\\w")) %>% 
  count(corpus) %>% 
  rename(total = n)

n_corpus
```

### genre titles

Look into particular lemmas

```{r}
genres <- unlist(str_split(c("песня
романс
сонет
элегия
басня
песнь
альбом
дума
баллада
отрывок
подражание
послание
молитва
фантазия
псалом
эпиграмма
мелодия
антологический
надпись
аполог
сказка
экспромт
эпилог
шарада
омоним
куплет
гимн
предание
акростих
быль
ода
преложение
анаграмма
эпиграм
застольная
надгробный
аллегория
логогриф
идиллия
нагробный
надгробие
рондо
анаграм
анфологический
газель
элегический
эпиграммаять
эпиграммик"), pattern = "\n"))

genres_shortlist <- unlist(str_split(c("песня
романс
сонет
элегия
басня
песнь
альбом
дума
баллада
отрывок
подражание
послание
молитва
фантазия
псалом
эпиграмма
мелодия
антологический
аполог
сказка
экспромт
надпись
эпилог"), pattern = "\n"))
```

### Figure 3-1-1

Count number of texts that include genre words in title

```{r}
titles %>% 
  filter(lemma %in% genres) %>% 
  count(lemma, sort = T)

titles %>% 
  filter(lemma %in% genres) %>% 
  mutate(corpus = str_extract(text_id, "^\\w")) %>% 
  count(corpus, lemma, sort = T) %>% 
  pivot_wider(names_from = corpus, values_from = n, values_fill = 0) %>% 
  mutate(total = P+C) %>% 
  arrange(desc(total))


# roughly % of texts with genre titles
titles %>% 
  filter(lemma %in% genres) %>% 
  distinct(text_id) %>% 
  count() %>% 
  mutate(perc = n/nrow(corpus_1835)*100)


# same % but divided for periodicals and collections
titles %>% 
  filter(lemma %in% genres) %>% 
  distinct(text_id) %>% 
  mutate(corpus = str_extract(text_id, "^\\w")) %>% 
  count(corpus) %>% 
  left_join(n_corpus, by = "corpus") %>% 
  mutate(perc = n/total*100)

# remove LRPI data
titles %>% 
  filter(lemma %in% genres) %>% 
  filter(!lemma %in% c("шарада", "омоним", "акростих", "анаграм")) %>% 
  distinct(text_id) %>% 
  mutate(corpus = str_extract(text_id, "^\\w")) %>% 
  count(corpus) %>% 
  left_join(n_corpus, by = "corpus") %>% 
  mutate(perc = n/total*100)

titles %>% 
  filter(lemma %in% genres_shortlist) %>% 
  mutate(corpus = str_extract(text_id, "^\\w")) %>% 
  count(corpus, lemma, sort = T) %>% 
  left_join(n_corpus, by = "corpus") %>% 
  mutate(perc = round(n/total*100, 2)) %>% select(-n, -total) %>% 
  pivot_wider(names_from = corpus, values_from = perc)

p1 <- titles %>% 
  filter(lemma %in% genres_shortlist) %>% 
  mutate(corpus = str_extract(text_id, "^\\w")) %>% 
  count(corpus, lemma, sort = T) %>% 
  left_join(n_corpus, by = "corpus") %>% 
  mutate(perc = round(n/total*100, 2),
         corpus = ifelse(corpus == "P", "Периодика", "Отд. изд.")) %>% 
  select(-n, -total) %>% 
  ggplot(aes(x = reorder_within(lemma, by = perc, within = lemma), 
             y = perc, 
             fill = corpus)) + 
  scale_x_reordered() + 
  coord_flip() + 
  geom_col(position = "dodge",
           width = 0.8) + 
  labs(x = "", 
       y = "% от всех текстов",
       fill = "Корпус") +
  scale_fill_manual(values = c(met.brewer("Veronese")[3],
                               met.brewer("Veronese")[6])) + 
  theme(axis.text = element_text(size = 12), 
        legend.position = "bottom",
        legend.text = element_text(size = 12))

p1

p1_bw <- titles %>% 
  filter(lemma %in% genres_shortlist) %>% 
  mutate(corpus = str_extract(text_id, "^\\w")) %>% 
  count(corpus, lemma, sort = T) %>% 
  left_join(n_corpus, by = "corpus") %>% 
  mutate(perc = round(n/total*100, 2),
         corpus = ifelse(corpus == "P", "Периодика", "Отд. изд.")) %>% 
  select(-n, -total) %>% 
  ggplot(aes(x = reorder_within(lemma, by = perc, within = lemma), 
             y = perc, 
             fill = corpus)) + 
  scale_x_reordered() + 
  coord_flip() + 
  geom_col(position = "dodge",
           width = 0.8) + 
  labs(x = "", 
       y = "% от всех текстов",
       fill = "Корпус") +
  scale_fill_manual(values = c("grey70",
                               "grey20")) + 
  theme(axis.text = element_text(size = 12), 
        legend.position = "bottom",
        legend.text = element_text(size = 12))

p1_bw
```

Songs by years

```{r}
# glimpse(corpus_1835)

p2 <- titles %>% 
  left_join(corpus_1835 %>% select(text_id, year), by = "text_id") %>% 
  mutate(corpus = str_extract(text_id, "^\\w"), 
         corpus = ifelse(corpus == "P", "Периодика", "Отд. изд.")) %>% 
  count(corpus, year, lemma, sort = T) %>% 
  filter(lemma == "песня" | lemma == "романс") %>% 
  ggplot(aes(x = year, y = n, fill = corpus)) + 
  geom_col(position = "dodge") +  
  facet_wrap(~lemma, ncol = 1) + 
  scale_fill_manual(values = c(met.brewer("Veronese")[3],
                               met.brewer("Veronese")[6])) + 
  theme(axis.text = element_text(size = 12), 
        strip.text = element_text(size = 12),
        legend.position = "bottom") + 
  labs(x = "", y = "Количество текстов", fill = "") 

p2

p2_bw <- titles %>% 
  left_join(corpus_1835 %>% select(text_id, year), by = "text_id") %>% 
  mutate(corpus = str_extract(text_id, "^\\w"), 
         corpus = ifelse(corpus == "P", "Периодика", "Отд. изд.")) %>% 
  count(corpus, year, lemma, sort = T) %>% 
  filter(lemma == "песня" | lemma == "романс") %>% 
  ggplot(aes(x = year, y = n, fill = corpus)) + 
  geom_col(position = "dodge") +  
  facet_wrap(~lemma, ncol = 1) + 
  scale_fill_manual(values = c("grey70", "grey20")) + 
  theme(axis.text = element_text(size = 12), 
        strip.text = element_text(size = 12),
        legend.position = "bottom") + 
  labs(x = "", y = "Количество текстов", fill = "") 

p2_bw
```

```{r, warning=FALSE, message=FALSE, eval=FALSE}
plot_grid(p1, p2,
          ncol = 2, labels = c("A", "Б"),
          rel_widths = c(2,1))

ggsave("plots/Fig_3-1-1.png", plot = last_plot(), dpi = 300, bg = "white",
       width = 10, height = 6)
```

```{r, warning=FALSE, message=FALSE, eval=FALSE}
plot_grid(p1_bw, p2_bw,
          ncol = 2, labels = c("A", "Б"),
          rel_widths = c(2,1))

ggsave("plots/bw/Fig_3-1-1.png", plot = last_plot(), dpi = 300, bg = "white",
       width = 10, height = 6)
```

```{r, eval=F}
# ggsave("plots/Fig_3-1-1.png", plot = p1, dpi = 300,
#        bg = "white", width = 7, height = 5)
# 
# ggsave("plots/Fig_3-1-1a.png", plot = p2, dpi = 300,
#        bg = "white", width = 3, height = 4)
```

Attach metadata to text titles data and count sources per year

```{r}
songs_sources <- titles %>% 
  filter(lemma == "песня") %>% 
  select(text_id) %>% 
  left_join(sources, by = "text_id") %>% 
  count(type, year, book_title) %>% 
  arrange(-desc(year))

songs_sources %>% 
  filter(year == "1839" & type == "periodicals")

songs_sources %>% 
  filter(year == "1840" & type == "periodicals") %>% 
  arrange(desc(n))

# write full data for exploration
# write.csv(songs_sources, "03_1_genres_songs-sources.csv")
```

Deeper look into songs titles

```{r}
titles %>% 
  filter(lemma == "песня") %>% 
  left_join(sources, by = "text_id") %>% 
  filter(year == "1840" & type == "periodicals") %>% 
  select(text_id, text_title, book_title) %>% head(20)

# quick check on empty main titles
corpus_1835 %>% 
  filter(text_id %in% c("P_1190", "P_1191", "P_1794", "P_1795"))
```

### Figure 3-1-2-A: genre and meters

Some work around texts with multiple genres in the title ("подражание псалму")

```{r}
# multigenre <- titles %>% 
#   select(text_id, lemma) %>% 
#   filter(lemma %in% genres_shortlist) %>% 
#   group_by(text_id) %>% 
#   summarise(genre = paste0(lemma, collapse = " | ")) %>% 
#   filter(str_detect(genre, " \\| "))

# m <- corpus1835 %>% 
#   filter(text_id %in% multigenre$text_id) %>% 
#   select(text_id, text_title, text_subtitle) %>% 
#   left_join(multigenre %>% select(text_id, genre), by = "text_id")

# write.csv(m, "multigenre_texts.csv")

# read the data with normalised genres
m <- read.delim("multigenre_texts.csv", sep = ';') %>% select(-X)

glimpse(m)
```

```{r}
titles %>% 
  filter(lemma %in% genres) %>% 
  
  # attach cleaned genres data for selected texts
  left_join(m %>% select(text_id, true_genre), by = "text_id") %>% 
  mutate(lemma = ifelse(!is.na(true_genre), true_genre, lemma)) %>% 
  select(-true_genre) %>% 
  
  # additional selection for a better plot
  # additional selection for a better plot
  filter(lemma %in% c("баллада", "басня", 
                      "дума", "мелодия", #"молитва", "отрывок", 
                      "песнь", "песня", #"подражание", "послание", 
                      #"псалом", 
                      "романс", "сонет", "элегия"#, "эпиграмма"
                      )) %>% 
  # capitalisation for the plot
  mutate(lemma = tools::toTitleCase(lemma)) %>% 
  
  left_join(sources, by = "text_id") %>% 
  filter(meter != "Other") %>% 
  
  # attach rus meters for the plot
  left_join(meters_transl, by = "meter") %>% 
  
  count(lemma, meter_rus, sort = T) %>% 
  ggplot(aes(x = meter_rus, y = n, fill = meter_rus)) + 
  geom_col(position = "dodge") + 
  facet_wrap(~lemma, scales = "free_x") + 
  coord_flip() + 
  scale_fill_manual(values = c(met.brewer("Veronese")[6],
                               met.brewer("Veronese")[4],
                               met.brewer("Veronese")[7],
                               met.brewer("Veronese")[3],
                               met.brewer("Veronese")[1])) + 
  theme(text = element_text(size = 12), 
        legend.position = "None",
        axis.text = element_text(size = 12),
        strip.text = element_text(size = 12)) + 
  labs(x = "", y = "Количество текстов") 

# ggsave("plots/Fig_3-1-2a.png", plot = last_plot(), dpi = 300,
#        bg = "white", width = 8, height = 6)
```

```{r}
titles %>% 
  filter(lemma %in% genres) %>% 
  
  # attach cleaned genres data for selected texts
  left_join(m %>% select(text_id, true_genre), by = "text_id") %>% 
  mutate(lemma = ifelse(!is.na(true_genre), true_genre, lemma)) %>% 
  select(-true_genre) %>% 
  
  # additional selection for a better plot
  # additional selection for a better plot
  filter(lemma %in% c("баллада", "басня", 
                      "дума", "мелодия", #"молитва", "отрывок", 
                      "песнь", "песня", #"подражание", "послание", 
                      #"псалом", 
                      "романс", "сонет", "элегия"#, "эпиграмма"
                      )) %>% 
  # capitalisation for the plot
  mutate(lemma = tools::toTitleCase(lemma)) %>% 
  
  left_join(sources, by = "text_id") %>% 
  filter(meter != "Other") %>% 
  
  # attach rus meters for the plot
  left_join(meters_transl, by = "meter") %>% 
  
  count(lemma, meter_rus, sort = T) %>% 
  ggplot(aes(x = meter_rus, y = n, fill = meter_rus)) + 
  geom_col(position = "dodge") + 
  facet_wrap(~lemma, scales = "free_x") + 
  coord_flip() + 
  scale_fill_manual(values = c("grey50",
                               "grey30",
                               "grey5",
                               "grey75", 
                               "grey20")
                               ) + 
  theme(text = element_text(size = 12), 
        legend.position = "None",
        axis.text = element_text(size = 12),
        strip.text = element_text(size = 12)) + 
  labs(x = "", y = "Количество текстов") 

# ggsave("plots/bw/Fig_3-1-2a.png", plot = last_plot(), dpi = 300,
#        bg = "white", width = 8, height = 6)
```

### Figure 3-1-2-B: genres & formulas

Same for formulas

```{r}
titles %>% 
  filter(lemma %in% genres) %>% 
  
  # attach cleaned genres data for selected texts
  left_join(m %>% select(text_id, true_genre), by = "text_id") %>% 
  mutate(lemma = ifelse(!is.na(true_genre), true_genre, lemma)) %>% 
  select(-true_genre) %>% 
  
  # additional selection for a better plot
  filter(lemma %in% c("баллада", "басня", 
                      "дума", "мелодия", #"молитва", "отрывок", 
                      "песнь", "песня", #"подражание", "послание", 
                      #"псалом", 
                      "романс", "сонет", "элегия"#, "эпиграмма"
                      )) %>% 
  mutate(lemma = tools::toTitleCase(lemma)) %>% 
  
  left_join(sources, by = "text_id") %>% 
  filter(meter != "Other") %>% 
  
  left_join(meters_transl, by = "meter") %>% 
  
  mutate(formula = paste0(meter_short, feet)) %>% 
  filter(formula %in% c("Я4", "Я5", "Я6", "Яv", "Я43", "Амф43",
                        "Х4", "Амф4")) %>% 
  mutate(formula = ifelse(formula == "Яv", "Яв", formula)) %>% 
  count(lemma, formula, sort = T) %>% 
  ggplot(aes(x = formula, y = n, fill = formula)) + 
  geom_col(position = "dodge") + 
  facet_wrap(~lemma, scales = "free_x") + 
  coord_flip() + 
  scale_fill_manual(values = c(met.brewer("Archambault")[3], 
                               met.brewer("Archambault")[2],
                               met.brewer("Veronese")[5],
                               met.brewer("Veronese")[3],
                               met.brewer("Veronese")[1],
                               met.brewer("Veronese")[7],
                               met.brewer("Veronese")[4],
                               met.brewer("Veronese")[6])) +
  theme(text = element_text(size = 12), 
        legend.position = "None",
        axis.text = element_text(size = 12),
        strip.text = element_text(size = 12)) + 
  labs(x = "", y = "Количество текстов")

ggsave("plots/Fig_3-1-2b.png", plot = last_plot(), dpi = 300,
       bg = "white", width = 8, height = 6)
```

```{r}
titles %>% 
  filter(lemma %in% genres) %>% 
  
  # attach cleaned genres data for selected texts
  left_join(m %>% select(text_id, true_genre), by = "text_id") %>% 
  mutate(lemma = ifelse(!is.na(true_genre), true_genre, lemma)) %>% 
  select(-true_genre) %>% 
  
  # additional selection for a better plot
  filter(lemma %in% c("баллада", "басня", 
                      "дума", "мелодия", #"молитва", "отрывок", 
                      "песнь", "песня", #"подражание", "послание", 
                      #"псалом", 
                      "романс", "сонет", "элегия"#, "эпиграмма"
                      )) %>% 
  mutate(lemma = tools::toTitleCase(lemma)) %>% 
  
  left_join(sources, by = "text_id") %>% 
  filter(meter != "Other") %>% 
  
  left_join(meters_transl, by = "meter") %>% 
  
  mutate(formula = paste0(meter_short, feet)) %>% 
  filter(formula %in% c("Я4", "Я5", "Я6", "Яv", "Я43", "Амф43",
                        "Х4", "Амф4")) %>% 
  mutate(formula = ifelse(formula == "Яv", "Яв", formula)) %>% 
  count(lemma, formula, sort = T) %>% 
  ggplot(aes(x = formula, y = n, fill = formula)) + 
  geom_col(position = "dodge") + 
  facet_wrap(~lemma, scales = "free_x") + 
  coord_flip() + 
  scale_fill_manual(values = c("grey35",
                               "grey55", 
                               "grey70", 
                               "grey10", 
                               "grey50",
                               "grey60", 
                               "grey40", 
                               "grey80")) +
  theme(text = element_text(size = 12), 
        legend.position = "None",
        axis.text = element_text(size = 12),
        strip.text = element_text(size = 12)) + 
  labs(x = "", y = "Количество текстов")

ggsave("plots/bw/Fig_3-1-2b.png", plot = last_plot(), dpi = 300,
       bg = "white", width = 8, height = 6)
```

Elegies in iamb-5

```{r}
titles %>% 
  filter(lemma %in% genres) %>% 
  
  # attach cleaned genres data for selected texts
  left_join(m %>% select(text_id, true_genre), by = "text_id") %>% 
  mutate(lemma = ifelse(!is.na(true_genre), true_genre, lemma)) %>% 
  select(-true_genre) %>% 
  
  # additional selection for a better plot
  filter(lemma %in% c("баллада", "басня", 
                      "дума", "мелодия", #"молитва", "отрывок", 
                      "песнь", "песня", #"подражание", "послание", 
                      #"псалом", 
                      "романс", "сонет", "элегия"#, "эпиграмма"
                      )) %>% 
  mutate(lemma = tools::toTitleCase(lemma)) %>% 
  
  left_join(sources, by = "text_id") %>% 
  filter(meter != "Other") %>% 
  left_join(corpus_1835 %>% select(text_id, author_text, text_subtitle, text_raw), 
            by = "text_id") %>% 
  filter(lemma == "Сонет" & meter == "Iamb" & feet == "5") 
```

Check if periodicals stats are significantly different

```{r}
titles %>% 
  filter(lemma %in% genres) %>% 
  # additional selection for a better plot
  filter(lemma %in% c("баллада", "басня", "дума", "мелодия", "молитва",
                      "отрывок", "песнь", "песня", "подражание", "послание", 
                      "псалом", "романс", "сонет", "элегия", "эпиграмма")) %>% 
  left_join(sources, by = "text_id") %>% 
  filter(meter != "Other" & type == "periodicals") %>% 
  mutate(formula = paste0(meter, "_", feet)) %>% 
  filter(formula %in% c("Iamb_4", "Iamb_5", "Iamb_6", "Iamb_other",
                        "Trochee_4", "Amphibrach_4")) %>% 
  count(lemma, formula, sort = T) %>% 
  ggplot(aes(x = formula, y = n, fill = formula)) + 
  geom_col(position = "dodge") + 
  facet_wrap(~lemma, scales = "free_x") + 
  coord_flip() + 
  scale_fill_manual(values = c(met.brewer("Veronese")[6],
                               met.brewer("Veronese")[1],
                               met.brewer("Veronese")[7],
                               met.brewer("Veronese")[4],
                               met.brewer("Veronese")[5],
                               met.brewer("Veronese")[3])) +
  theme(text = element_text(size = 12)) + 
  labs(x = "", y = "Количество текстов", 
       title = "Only periodicals")
```

Only books

```{r}
titles %>% 
  filter(lemma %in% genres) %>% 
  # additional selection for a better plot
  filter(lemma %in% c("баллада", "басня", "дума", "мелодия", "молитва",
                      "отрывок", "песнь", "песня", "подражание", "послание", 
                      "псалом", "романс", "сонет", "элегия", "эпиграмма")) %>% 
  left_join(sources, by = "text_id") %>% 
  filter(meter != "Other" & type == "book") %>% 
  mutate(formula = paste0(meter, "_", feet)) %>% 
  filter(formula %in% c("Iamb_4", "Iamb_5", "Iamb_6", "Iamb_other",
                        "Trochee_4", "Amphibrach_4")) %>% 
  count(lemma, formula, sort = T) %>% 
  ggplot(aes(x = formula, y = n, fill = formula)) + 
  geom_col(position = "dodge") + 
  facet_wrap(~lemma, scales = "free_x") + 
  coord_flip() + 
  scale_fill_manual(values = c(met.brewer("Veronese")[6],
                               met.brewer("Veronese")[1],
                               met.brewer("Veronese")[7],
                               met.brewer("Veronese")[4],
                               met.brewer("Veronese")[5],
                               met.brewer("Veronese")[3])) +
  theme(text = element_text(size = 12)) + 
  labs(x = "", y = "Количество текстов")
```

### Topic words in titles

Topic titles (words with freq \> 10 are selected)

```{r}
topics <- unlist(str_split("поэт
ночь
она
смерть
друг
жизнь
любовь
море
могила
красавица
сон
роза
цветок
соловей
звезда
дева
певец
видение
мечта
разлука
слеза
вечер
сердце
сестра
ангел
воин
желание
мысль
признание
утешение
чувство
вдохновение
гений
конь
время
грусть
девица
крестьянин
мать
родина
тоска
возрождение
гроза
пловец
степь
человек
весна
девушка
душа
ночной
свет
война
гора
древний
идеал
книга
младенец
невеста
развалины
счастие
утро
художник
юноша", pattern = "\n"))

# roughly % of texts with topic titles
titles %>% 
  filter(lemma %in% topics) %>% 
  distinct(text_id) %>% 
  count() %>% 
  mutate(perc = n/nrow(corpus_1835)*100)


# same % but divided for periodicals and collections
titles %>% 
  filter(lemma %in% topics) %>% 
  distinct(text_id) %>% 
  mutate(corpus = str_extract(text_id, "^\\w")) %>% 
  count(corpus) %>% 
  left_join(n_corpus, by = "corpus") %>% 
  mutate(perc = n/total*100)

titles %>% 
  filter(lemma %in% topics) %>% 
  mutate(corpus = str_extract(text_id, "^\\w")) %>% 
  count(corpus, lemma, sort = T) %>% 
  # left_join(n_corpus, by = "corpus") %>% 
  #mutate(perc = round(n/total*100, 2),
  #       corpus = ifelse(corpus == "P", "Периодика", "Отд. изд.")) %>% 
  # select(-n, -total) %>% 
  ggplot(aes(x = reorder_within(lemma, by = n, within = lemma), 
             y = n, 
             fill = corpus)) + 
  scale_x_reordered() + 
  coord_flip() + 
  geom_col(position = "dodge",
           width = 0.8) + 
  labs(x = "", 
       y = "% от всех текстов",
       fill = "Корпус") +
  scale_fill_manual(values = c(met.brewer("Veronese")[3],
                               met.brewer("Veronese")[6])) + 
  theme(axis.text = element_text(size = 12))
```

Total number of hits

```{r}
titles %>% 
  filter(lemma %in% topics) %>% 
  count(lemma, sort = T) %>% 
  head(30)
```

Thematic words in titles distribution

```{r}
titles %>% 
  filter(lemma %in% topics) %>% 
  distinct(text_id) %>%
  left_join(sources, by = "text_id") %>% 
  count(type, year) %>%
  ggplot(aes(x = year, y = n, fill = type)) + 
  geom_col(position = "dodge") + 
  scale_fill_manual(values = c(met.brewer("Veronese")[3],
                               met.brewer("Veronese")[6]))
```

Selected words appeared more than 16 times : поэт, ночь, жизнь, смерть, море, любовь, могила, сон, крестьянин, мечта

```{r}
titles %>% 
  filter(lemma %in% topics) %>% 
  left_join(sources, by = "text_id") %>% 
  filter(lemma %in% c("поэт", "ночь", "жизнь", "смерть",
                      "море", "любовь", "могила", "сон", "мечта", 
                      "звезда", "певец", "разлука", "слеза",
                      "ангел", "мысль", "родина")) %>% 
  count(type, year, lemma) %>% 
  ggplot(aes(x = year, y = n, fill = type)) + 
  geom_col(position = "dodge") + 
  facet_wrap(~lemma) + 
  scale_fill_manual(values = c(met.brewer("Veronese")[3],
                               met.brewer("Veronese")[6]))
```

Selected words and meters

```{r}
titles %>% 
  filter(lemma %in% topics) %>% 
  left_join(sources, by = "text_id") %>% 
  filter(lemma %in% c("поэт", "ночь", "жизнь", "смерть",
                      "море", "любовь", "могила", "сон", "мечта", 
                      "звезда", "певец", "разлука", "слеза",
                      "ангел", "мысль", "родина")) %>% 
  count(meter, lemma) %>% 
  filter(meter != "Other") %>% 
  ggplot(aes(x = meter, y = n, fill = meter)) + 
  geom_col(position = "dodge") + 
  facet_wrap(~lemma, scales = "free") + 
  coord_flip() + 
  scale_fill_manual(values = c(met.brewer("Veronese")[6],
                               met.brewer("Veronese")[4],
                               met.brewer("Veronese")[7],
                               met.brewer("Veronese")[1],
                               met.brewer("Veronese")[3])) + 
  theme(text = element_text(size = 12)) + 
  labs(x = "", y = "Количество текстов")
```

Formulas

```{r}
titles %>% 
  filter(lemma %in% topics) %>% 
  filter(lemma %in% c("поэт", "ночь", "жизнь", "смерть",
                      "море", "любовь", "могила", "сон", "мечта", 
                      "звезда", "певец", "разлука", "слеза",
                      "ангел", "мысль", "родина")) %>% 
  
  mutate(lemma = tools::toTitleCase(lemma)) %>% 
  
  left_join(sources, by = "text_id") %>% 
  filter(meter != "Other") %>% 
  
  left_join(meters_transl, by = "meter") %>% 
  
  mutate(formula = paste0(meter_short, feet)) %>% 
  filter(formula %in% c("Я4", "Я5", "Я6", "Яother",
                        "Х4", "Амф4")) %>% 
  mutate(formula = ifelse(formula == "Яother", "Яв", formula)) %>% 
  count(lemma, formula, sort = T) %>% 
  ggplot(aes(x = formula, y = n, fill = formula)) + 
  geom_col(position = "dodge") + 
  facet_wrap(~lemma, scales = "free_x") + 
  coord_flip() + 
  scale_fill_manual(values = c(met.brewer("Veronese")[5],
                               met.brewer("Veronese")[3],
                               met.brewer("Veronese")[1],
                               met.brewer("Veronese")[7],
                               met.brewer("Veronese")[4],
                               met.brewer("Veronese")[6])) +
  theme(text = element_text(size = 12), 
        legend.position = "None") + 
  labs(x = "", y = "Количество текстов")
```

Names

```{r}
n <- unlist(str_split(
  "гете
гюго
байрон
пушкин
наполеон
ламартин
шиллер",
  pattern = "\n"
))

# roughly % of texts with topic titles
titles %>% 
  filter(lemma %in% n) %>% 
  distinct(text_id) %>% 
  count() %>% 
  mutate(perc = n/nrow(corpus_1835)*100)


# same % but divided for periodicals and collections
titles %>% 
  filter(lemma %in% n) %>% 
  distinct(text_id) %>% 
  mutate(corpus = str_extract(text_id, "^\\w")) %>% 
  count(corpus) %>% 
  left_join(n_corpus, by = "corpus") %>% 
  mutate(perc = n/total*100)

titles %>% 
  filter(lemma %in% n) %>% 
  mutate(corpus = str_extract(text_id, "^\\w")) %>% 
  count(corpus, lemma, sort = T) %>% 
  left_join(n_corpus, by = "corpus") %>% 
  select(-total) %>% 
  pivot_wider(names_from = corpus, values_from = n)

```

Specific words

```{r}
n <- unlist(str_split(
  "1837
русский
славянин
славянский
солдатский
москва",
  pattern = "\n"
))

# roughly % of texts with topic titles
titles %>% 
  filter(lemma %in% n) %>% 
  distinct(text_id) %>% 
  count() %>% 
  mutate(perc = n/nrow(corpus_1835)*100)


# same % but divided for periodicals and collections
titles %>% 
  filter(lemma %in% n) %>% 
  distinct(text_id) %>% 
  mutate(corpus = str_extract(text_id, "^\\w")) %>% 
  count(corpus) %>% 
  left_join(n_corpus, by = "corpus") %>% 
  mutate(perc = n/total*100)

titles %>% 
  filter(lemma %in% n) %>% 
  mutate(corpus = str_extract(text_id, "^\\w")) %>% 
  count(corpus, lemma, sort = T) %>% 
  left_join(n_corpus, by = "corpus") %>% 
  select(-total) %>% 
  pivot_wider(names_from = corpus, values_from = n)

```

# 
