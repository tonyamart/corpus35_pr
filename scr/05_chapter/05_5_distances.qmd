---
title: "05_5_distances"
format: md
editor: visual
---

## load data

```{r}
library(tidyverse)

library(MetBrewer)
theme_set(theme_minimal())
```

### Corpus-1835

```{r}
rhyme_words <- read.csv("../../data/corpus1835/sql_db/rhyme_words_upd.csv", 
                        
                        # DON'T LET R EAT IAMBS AND DO INTEGER 01 => 1
                        colClasses = c("stress_pattern" = "character",
                                       "closure_pattern" = "character")) 

lemm <- read.csv("../../data/ch5/rhyme_words_lemmas.csv") %>% select(-X)

rhyme_words <- rhyme_words %>% 
  left_join(lemm, by = "word")


# rewrite pos tags
pos_transl <- tibble(old_tag = c("S", "V", "APRO", "SPRO", 
                   "A", "ADV", "NUM", "ADVPRO",
                   "INTJ", "PART", "PR", "ANUM", "CONJ"),
       pos = c("NOUN", "VERB", "PRON", "PRON", 
               "ADJ", "ADV", "NUM", "PRON",
               "INTJ", "PART", "ADP", "NUM", "CONJ")) # upos

# attach to the table with all words
rhyme_words <- rhyme_words %>% 
  rename(old_tag = pos) %>% 
  left_join(pos_transl, by = "old_tag")

############ load rhyme pairs & separate them as lists of words #######
# load pairs
rhyme_pairs <- read.csv("../../data/corpus1835/sql_db/rhyme_pairs.csv") %>% 
  rename(text_id = poem_id) %>% 
  # remove Kulman texts
  filter(!str_detect(text_id, "C_264"))

# separate and rebind
w1 <- rhyme_pairs %>% 
  select(text_id, from) %>% 
  rename(word = from)

w2 <- rhyme_pairs %>% 
  select(text_id, to) %>% 
  rename(word = to)

w <- rbind(w1, w2)


# attach words characteristics
rw <- w %>% 
  left_join(rhyme_words, by = "word") 

########## load metadata #############
meta <- read.csv("../../data/corpus1835/sql_db/texts_metadata.csv")

# glimpse(meta)

authors_meta <- read_csv("../../data/corpus1835/sql_db/authors.csv") %>% 
  select(A_ID, author_name)

meta <- meta %>% 
  left_join(authors_meta, by = "A_ID") %>% 
  mutate(corpus = str_extract(text_id, "^\\w")) %>% 
  select(text_id, corpus, meter, author_name)

# attach metadata
c35_rw <- rw %>% 
  left_join(meta, by = "text_id") %>% 
  
  # add POS_syl counter
  mutate(syl_len = nchar(stress_pattern),
         pos_syl = paste0(pos, "_", syl_len)) %>% 
  
  select(text_id, corpus, meter, author_name, 
         word, lemma, closure,
         ending_st,
         pos_syl) %>% 
  mutate(corpus = paste0("c1835_", corpus))

# final view of the data
sample_n(c35_rw, 5)
```

```{r}
rm(authors_meta, lemm, meta, pos_transl, w, w1, w2, rhyme_pairs, rhyme_words, rw)
```

### RNC

```{r}
rnc_rhymes <- read.csv("../../data/ch5/nkrja_rhyme_pairs.csv") %>% select(-X)
# glimpse(rnc_rhymes)

######## metadata #########
# attach authors & meters
# load metadata to extract meters
load("../../data/nkrja_19th_lem.Rda")
rnc_ids <- c19 %>% 
  #filter(meter %in% c("Я", "Х")) %>% 
  mutate(poem_id = paste0("RNC_", Unnamed..0, "_", year), 
         meter = meter) %>% 
  select(poem_id, meter, author)

# attach to rhyme data
rnc_rhymes <- rnc_rhymes %>% 
  left_join(rnc_ids, by = "poem_id") %>% 
  rename(#text_id = poem_id, 
         author_name = author) %>% 
  separate(poem_id, into = c("corpus", "text_id", "year"), sep = "_") %>% 
  mutate(year = as.numeric(year),
         corpus = ifelse(year < 1810, "RNC_before 1810", corpus),
         corpus = ifelse(year > 1810 & year < 1830, "RNC_1810-1830", corpus),
         corpus = ifelse(year > 1840, "RNC_after 1840", corpus)) %>% 
  filter(corpus != "RNC")  ########## NB remove texts of 1830s

######## rhyme data preparation ##########
# separate rhyme pairs to just words
w1 <- rnc_rhymes %>% 
  mutate(n_syl = nchar(from_sp),
         pos_syl = paste0(from_pos, "_", n_syl)) %>% 
  select(text_id, corpus, from_pos, from, from_closure, meter, author_name,
         pos_syl, from_ending_st) %>% 
  rename(pos = from_pos,
         word = from,
         closure = from_closure, 
         ending_st = from_ending_st)

w2 <- rnc_rhymes %>% 
  mutate(n_syl = nchar(to_sp),
         pos_syl = paste0(to_pos, "_", n_syl)) %>% 
  select(text_id, corpus, to_pos, to, to_closure, meter, author_name, 
         pos_syl, to_ending_st) %>% 
  rename(pos = to_pos,
         word = to,
         closure = to_closure,
         ending_st = to_ending_st)

w <- rbind(w1, w2)

# glimpse(w)

####### lemma ##########
# add lemmata (preprocessed)
lemm <- read.csv("../../data/ch5/rnc_rhyme_words_lemmas.csv") %>% select(-X)

# glimpse(lemm)

rnc_rw <- cbind(w, lemm %>% select(lemma)) %>% 
  # reorder columns similarly as in c35_rw
  select(text_id, corpus, meter, author_name, word, lemma, closure, 
         ending_st, pos_syl)

glimpse(rnc_rw) # final table

# remove obsolete vars
rm(c19, lemm, rnc_ids, rnc_rhymes, w, w1, w2)
```

## Features

```{r}
colnames(c35_rw) == colnames(rnc_rw)
```

```{r}
rhyme_words <- rbind(c35_rw, rnc_rw)

masc_rhymes <- rhyme_words %>% filter(closure == "masc" & corpus != "RNC_after 1840")

fem_rhymes <- rhyme_words %>% filter(closure == "fem" & corpus != "RNC_after 1840")
```

### Totals

```{r}
totals_masc <- masc_rhymes %>% 
  group_by(corpus) %>% 
  count()

totals_fem <- fem_rhymes %>% 
  group_by(corpus) %>% 
  count()

totals_masc %>% left_join(totals_fem %>% rename(n_fem = n), by = "corpus")
```

### MFW in rhyme

```{r}
masc_MFW_50 <- masc_rhymes %>%  
  count(word, sort = T) %>%  # here I cound word forms, not lemmas!
  head(50) %>% 
  mutate(rank = row_number())

fem_MFW_50 <- fem_rhymes %>% 
  count(word, sort = T) %>% 
  head(50) %>% 
  mutate(rank = row_number())

head(masc_MFW_50)
head(fem_MFW_50)
```

```{r}
s <- rhyme_words %>% 
  group_by(corpus) %>% 
  sample_n(10000)

mfw <- s %>% 
  filter(word %in% masc_MFW_50$word | word %in% fem_MFW_50$word) %>% 
  count(word) %>% 
  pivot_wider(names_from = word, values_from = n, values_fill = 0)

mfw[,1:7]
```

### MF endings

```{r}
masc_ending_50 <- masc_rhymes %>%  
  count(ending_st, sort = T) %>%  # here I cound word forms, not lemmas!
  head(50) %>% 
  mutate(rank = row_number())

fem_ending_50 <- fem_rhymes %>% 
  count(ending_st, sort = T) %>% 
  head(50) %>% 
  mutate(rank = row_number())

head(masc_ending_50)
head(fem_ending_50)
```

```{r}
mf_endings <- s %>% 
  filter(ending_st %in% masc_ending_50$ending_st | 
           ending_st %in% fem_ending_50$ending_st) %>% 
  count(ending_st) %>% 
  pivot_wider(names_from = ending_st, values_from = n, values_fill = 0)

mf_endings[,1:7]
dim(mf_endings)
```

### MF pos_syl

```{r}
masc_possyl_50 <- masc_rhymes %>%  
  count(pos_syl, sort = T) %>%  # here I cound word forms, not lemmas!
  head(50) %>% 
  mutate(rank = row_number())

fem_possyl_50 <- fem_rhymes %>% 
  count(pos_syl, sort = T) %>% 
  head(50) %>% 
  mutate(rank = row_number())

head(masc_possyl_50)
head(fem_possyl_50)
```

```{r}
mf_possyl <- s %>% 
  filter(pos_syl %in% masc_possyl_50$pos_syl | 
           pos_syl %in% fem_possyl_50$pos_syl) %>% 
  count(pos_syl) %>% 
  pivot_wider(names_from = pos_syl, values_from = n, values_fill = 0)

mf_possyl[,1:7]
dim(mf_possyl)
```

MDS table

```{r}

x <- NULL

for (i in 1:100) {
  
  # take a sample
  s <- rhyme_words %>% 
    filter(corpus != "RNC_after 1840") %>% 
    group_by(corpus) %>% 
    sample_n(10000)
  
  # calculate inside the sample:
  mfw <- s %>% 
    filter(word %in% masc_MFW_50$word | word %in% fem_MFW_50$word) %>% 
    count(word) %>% 
    pivot_wider(names_from = word, values_from = n)
  
  mf_endings <- s %>% 
    filter(ending_st %in% masc_ending_50$ending_st | 
             ending_st %in% fem_ending_50$ending_st) %>% 
    count(ending_st) %>% 
    pivot_wider(names_from = ending_st, values_from = n)
  
  mf_possyl <- s %>% 
    filter(pos_syl %in% masc_possyl_50$pos_syl | 
             pos_syl %in% fem_possyl_50$pos_syl) %>% 
    count(pos_syl) %>% 
    pivot_wider(names_from = pos_syl, values_from = n)
  
  # bind together
  f <- cbind(mfw, mf_endings[, -1], mf_possyl[, -1])
  
  f <- f %>% 
    mutate(smpl = i)
  
  f[is.na(f)] <- 0 # remove na
  
  x <- rbind(x, f)
  
}

x

n <- x$corpus

x[is.na(x)] <- 0

xxx <- x

mtrx <- x %>% 
  ungroup() %>% 
  select(-corpus, -smpl) %>% 
  scale() %>% 
  as.matrix()

distances <- dist(mtrx, method = "euclidean")
  
mds <- cmdscale(distances, eig = TRUE, k = 2)
  
proj <- tibble(x = mds$points[,1], 
                 y = mds$points[,2],
                 corpus = n)

proj

proj %>% 
  ggplot(aes(x, y, color = corpus, shape = corpus)) + 
  geom_point(data = proj, aes(x, y))

# first take samples, as 1 sample = 1 author
# then project ALL at the same time in the same space
```

```{r}
u <- umap(xxx %>% 
  ungroup() %>% 
  select(-corpus, -smpl))

tibble(x=u$layout[,1],
       y=u$layout[,2],
       author=xxx$corpus) %>%
  ggplot(aes(x,y,color=author)) + 
  geom_point() + 
  #geom_text(aes(label=author),size=6) + 
  theme_bw() + 
  #guides(color="none") + 
  scale_color_viridis_d() 
```

```{r}

sample_size <- 10000
x <- NULL

for (i in 1:100) {

  # take a sample of equal number of words from each corpus
  s <- masc_rhymes %>% 
    group_by(corpus) %>% 
    sample_n(sample_size) %>% 
    ungroup()

  #s
  
  # create matrix with word frequencies
  m <- s %>% 
    filter(word %in% masc_MFW_100$word) %>% #filter only top 100 MFW
    group_by(corpus) %>% 
    count(word) %>% 
    ungroup() %>% 
    pivot_wider(names_from = word, values_from = n, values_fill = 0) 
  
  head(m)

  corpus <- m$corpus
  
  mtrx <- m %>% 
    select(-corpus) %>% scale() %>% as.matrix()
  
  distances <- dist(mtrx, method = "euclidean")
  
  mds <- cmdscale(distances, eig = TRUE, k = 2)
  
  proj <- tibble(x = mds$points[,1], 
                 y = mds$points[,2],
                 corpus = corpus)
  
  x <- rbind(proj, x)
}
  
nrow(x)
             
x %>% 
  ggplot(aes(x, y, color = corpus, shape = corpus)) + 
  geom_point(data = x, aes(x, y)) #+ 
  #geom_text_repel(aes(label = corpus)) +
  #theme(legend.position = "None")

```

```{r}
library(umap)

mtrx[1:4, 1:10]

uproj <- umap(mtrx)
```

```{r}
head(iris)

iris.data <- iris[, grep("Sepal|Petal", colnames(iris))]
iris.data

iris.labels <- iris[, "Species"]
iris.labels

iris.umap <- umap(iris.data)

```
